<html>
<head>
	<script type="text/javascript" src="smoothie.js"></script>

</head>
<body>
<table width="100%">
<tr>
	<td align="center">
	<span id="timeDelta"></span>
<table>
<tr>
	<td>
		Rob:
		<br/>
		<br/>X: <br/>
		<canvas id="robX" width="400" height="100"></canvas>
		<br/>Y: <br/>
		<canvas id="robY" width="400" height="100"></canvas>
		<br/>Z: <br/>
		<canvas id="robZ" width="400" height="100"></canvas>
		
	</td>	
	<td>
		Tejas:
		<br/>
		<br/>X: <br/>
		<canvas id="tejasX" width="400" height="100"></canvas>
		<br/>Y: <br/>
		<canvas id="tejasY" width="400" height="100"></canvas>
		<br/>Z: <br/>
		<canvas id="tejasZ" width="400" height="100"></canvas>
		
		
	</td>
</tr>
<tr>
	<td colspan="2">
		Everyone Else:
		<br/>
		<br/>X: <br/>
		<canvas id="allcanvasX" width="800" height="100"></canvas>
		<br/>Y: <br/>
		<canvas id="allcanvasY" width="800" height="100"></canvas>
		<br/>Z: <br/>
		<canvas id="allcanvasZ" width="800" height="100"></canvas>
	</td>
</tr>
</table>
</td>
</tr>
</table>
		<script type="text/javascript">

			window.startTime = new Date();
			window.count = 0;
			window.diffs = new Array();
			var timeDelta = document.getElementById("timeDelta");
			createCharts("rob");
			createCharts("tejas");
			createCharts("allcanvas");

			function createCharts(elementId) {

				window[elementId + "X"] = createChart(elementId + "X", { strokeStyle:'rgb(0, 255, 0)', lineWidth:1 });
				window[elementId + "Y"] = createChart(elementId + "Y", { strokeStyle:'rgb(255, 0, 0)', lineWidth:1 });
				window[elementId + "Z"] = createChart(elementId + "Z", { strokeStyle:'rgb(0, 0, 255)', lineWidth:1 });

			}
			function createChart(elementId, opts) {
				var smoothie = new SmoothieChart({millisPerPixel:100});
				smoothie.streamTo(document.getElementById(elementId), 500);

				var line = new TimeSeries();

				smoothie.addTimeSeries(line, opts);
		
				smoothie.Line = line;
				return smoothie;
			}


			dataSocket = new WebSocket("ws://40.77.98.241:1880/mojio");
			dataSocket.onmessage = function (event) {
				//console.log("onmessage", event);
				if(event) {
					var accel = JSON.parse(event.data);
					accel.DeviceTimeReal = new Date(accel.DeviceTime);

					while( timeDelta.firstChild ) {
						timeDelta.removeChild( timeDelta.firstChild );
					}
					//console.log(accel.DeviceTimeReal);
					var diff = Math.abs( (new Date()) - accel.DeviceTimeReal );
					var minutes = Math.floor((diff/1000)/60);
					
					window.diffs.push(minutes);
					if(window.diffs.length>100) window.diffs.pop();


					window.count++;

					var nowDiff = Math.abs( (new Date()) - window.startTime );
					var nowMinutes = Math.floor((nowDiff/1000)/60);

					var nowSeconds = nowMinutes * 60;
					//if(nowSeconds<=0) nowSeconds = 1;
					var msgPerSecond = window.count/nowSeconds;

					timeDelta.appendChild( document.createTextNode(Math.round(window.diffs.average(),2)+ " minutes, " + window.count + " at " + Math.round(msgPerSecond,0) + " msgs per second"));

					accel.DeviceTime = new Date().getTime();//new Date(accel.DeviceTime);	
					//accel.DeviceTime =(new Date(accel.DeviceTime)).getTime();	
					//console.log(accel.IMEI, accel.X, accel.Y, accel.Z);
					


					// if(!firstDriver.IMEI) {
					// 	firstDriver.IMEI = accel.IMEI;
					// 	var span = document.getElementById("randomIMEI");
					// 	while( span.firstChild ) {
    	// 					span.removeChild( span.firstChild );
					// 	}

					// 	span.appendChild( document.createTextNode(firstDriver.IMEI) );
					// 	firstDriver.Last = new Date();
					// } 
					// if(firstDriver.IMEI) {
					// 	if(((new Date()) - firstDriver.Last) > 20000) {
					// 		firstDriver.IMEI = accel.IMEI;
					// 		var span = document.getElementById("randomIMEI");
					// 		while( span.firstChild ) {
	    // 						span.removeChild( span.firstChild );
					// 		}
					// 		span.appendChild( document.createTextNode(firstDriver.IMEI) );
					// 		firstDriver.Last = new Date();
					// 	}
					// }

					if(accel.IMEI === "357330050459106") {
						window["robX"].Line.append(accel.DeviceTime, accel.X);
						window["robY"].Line.append(accel.DeviceTime, accel.Y);
						window["robZ"].Line.append(accel.DeviceTime, accel.Z);
					// } else if(accel.IMEI === firstDriver.IMEI) {
					// 	window["randomX"].Line.append(accel.DeviceTime, accel.X);
					// 	window["randomY"].Line.append(accel.DeviceTime, accel.Y);
					// 	window["randomZ"].Line.append(accel.DeviceTime, accel.Z);
					} else if(accel.IMEI === "357330051383024") {
						window["tejasX"].Line.append(accel.DeviceTime, accel.X);
						window["tejasY"].Line.append(accel.DeviceTime, accel.Y);
						window["tejasZ"].Line.append(accel.DeviceTime, accel.Z);
						
					} else {
						window["allcanvasX"].Line.append(accel.DeviceTime, accel.X);
						window["allcanvasY"].Line.append(accel.DeviceTime, accel.Y);
						window["allcanvasZ"].Line.append(accel.DeviceTime, accel.Z);

					}
				}
			}
			dataSocket.onerror = function (event) {
				console.log("onerror", event);
			}
			dataSocket.onopen = function (event) {
				console.log("onopen", event);
			}
			dataSocket.onclose = function (event) {
				console.log("onclose", event);
			}
			console.log(dataSocket);
			console.log('c');

			var firstDriver = {};



			Array.prototype.average=function(){
			    var sum=0;
			    var j=0;
			    for(var i=0;i<this.length;i++){
			        if(isFinite(this[i])){
			          sum=sum+parseFloat(this[i]);
			           j++;
			        }
			    }
			    if(j===0){
			        return 0;
			    }else{
			        return sum/j;
			    }

			}
		</script>
</body>
</html>

